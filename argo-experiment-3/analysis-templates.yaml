# This file contains AnalysisTemplates referenced by Rollouts and Experiments in the examples.
# Please apply this file first, before running any of the examples.

---
# This AnalysisTemplate will run a Kubernetes Job every 5 seconds that succeeds.
kind: AnalysisTemplate
apiVersion: argoproj.io/v1alpha1
metadata:
  name: pass
spec:
  metrics:
  - name: pass
    interval: 5s
    failureLimit: 1
    provider:
      job:
        spec:
          template:
            spec:
              containers:
              - name: sleep
                image: alpine:3.8
                command: [sh, -c]
                args: [exit 0]
              restartPolicy: Never
          backoffLimit: 0
    count: 1
---
# This AnalysisTemplate will run a Kubernetes Job every 5 seconds, with a 50% chance of failure.
# When the number of accumulated failures exceeds failureLimit, it will cause the analysis run to
# fail, and subsequently cause the rollout or experiment to abort.
kind: AnalysisTemplate
apiVersion: argoproj.io/v1alpha1
metadata:
  name: random-fail
spec:
  metrics:
  - name: random-fail
    count: 2
    interval: 5s
    failureLimit: 1
    provider:
      job:
        spec:
          template:
            spec:
              containers:
              - name: sleep
                image: alpine:3.8
                command: [sh, -c]
                args: [FLIP=$(($(($RANDOM%10))%2)) && exit $FLIP]
              restartPolicy: Never
          backoffLimit: 0
---
kind: AnalysisTemplate
apiVersion: argoproj.io/v1alpha1
metadata:
  name: prom-request-rate
spec:
  metrics:
  - name: request-rate
    count: 5
    interval: 1m
    successCondition: result[0] <= 69.0
    failureLimit: 3
    provider:
      prometheus:
        address: https://prometheus.aoa.oes.opsmx.org
        query: |
          sum(rate(http_server_requests_seconds_bucket{kubernetes_pod_name=~".*"}[1m]))
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: mann-whitney
spec:
  metrics:
  - name: mann-whitney
    provider:
      kayenta:
        address: http://localhost:8090
        application: prom-test-app
        canaryConfigName: prom-config
        metricsAccountName: my-prometheus-account
        storageAccountName: in-memory-store-account
        configurationAccountName: my-prometheus-account
        scopes:
        - name: default
          controlScope:
            scope: default
            step: 60
            start: "{{args.start-time}}"
            end: "{{args.end-time}}"
            region: "us-east-1"
          experimentScope:
            scope: default
            step: 60
            start: "{{args.start-time}}"
            end: "{{args.end-time}}"
            region: "us-east-1"
        threshold:
          pass: 70
          marginal: 50
    interval: 600
    count: 5
